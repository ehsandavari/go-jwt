// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ehsandavari/go-jwt (interfaces: IJwtClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockIJwtClient is a mock of IJwtClient interface.
type MockIJwtClient struct {
	ctrl     *gomock.Controller
	recorder *MockIJwtClientMockRecorder
}

// MockIJwtClientMockRecorder is the mock recorder for MockIJwtClient.
type MockIJwtClientMockRecorder struct {
	mock *MockIJwtClient
}

// NewMockIJwtClient creates a new mock instance.
func NewMockIJwtClient(ctrl *gomock.Controller) *MockIJwtClient {
	mock := &MockIJwtClient{ctrl: ctrl}
	mock.recorder = &MockIJwtClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJwtClient) EXPECT() *MockIJwtClientMockRecorder {
	return m.recorder
}

// GetEmail mocks base method.
func (m *MockIJwtClient) GetEmail() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmail")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEmail indicates an expected call of GetEmail.
func (mr *MockIJwtClientMockRecorder) GetEmail() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmail", reflect.TypeOf((*MockIJwtClient)(nil).GetEmail))
}

// GetEmailVerified mocks base method.
func (m *MockIJwtClient) GetEmailVerified() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmailVerified")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetEmailVerified indicates an expected call of GetEmailVerified.
func (mr *MockIJwtClientMockRecorder) GetEmailVerified() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmailVerified", reflect.TypeOf((*MockIJwtClient)(nil).GetEmailVerified))
}

// GetId mocks base method.
func (m *MockIJwtClient) GetId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetId indicates an expected call of GetId.
func (mr *MockIJwtClientMockRecorder) GetId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetId", reflect.TypeOf((*MockIJwtClient)(nil).GetId))
}

// GetPhoneNumber mocks base method.
func (m *MockIJwtClient) GetPhoneNumber() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhoneNumber")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPhoneNumber indicates an expected call of GetPhoneNumber.
func (mr *MockIJwtClientMockRecorder) GetPhoneNumber() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhoneNumber", reflect.TypeOf((*MockIJwtClient)(nil).GetPhoneNumber))
}

// GetPhoneNumberVerified mocks base method.
func (m *MockIJwtClient) GetPhoneNumberVerified() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPhoneNumberVerified")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetPhoneNumberVerified indicates an expected call of GetPhoneNumberVerified.
func (mr *MockIJwtClientMockRecorder) GetPhoneNumberVerified() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPhoneNumberVerified", reflect.TypeOf((*MockIJwtClient)(nil).GetPhoneNumberVerified))
}

// GetUserId mocks base method.
func (m *MockIJwtClient) GetUserId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetUserId indicates an expected call of GetUserId.
func (mr *MockIJwtClientMockRecorder) GetUserId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserId", reflect.TypeOf((*MockIJwtClient)(nil).GetUserId))
}

// GinMiddleware mocks base method.
func (m *MockIJwtClient) GinMiddleware() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GinMiddleware")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// GinMiddleware indicates an expected call of GinMiddleware.
func (mr *MockIJwtClientMockRecorder) GinMiddleware() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GinMiddleware", reflect.TypeOf((*MockIJwtClient)(nil).GinMiddleware))
}

// VerifyToken mocks base method.
func (m *MockIJwtClient) VerifyToken(arg0, arg1, arg2 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// VerifyToken indicates an expected call of VerifyToken.
func (mr *MockIJwtClientMockRecorder) VerifyToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyToken", reflect.TypeOf((*MockIJwtClient)(nil).VerifyToken), arg0, arg1, arg2)
}
